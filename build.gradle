import sun.tools.jstat.Closure

plugins {
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "org.flywaydb.flyway" version "6.1.4"
    id 'java'
}

group = 'com.paypay.oa.user'
version = '1.0'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
    all*.exclude group: "org.slf4j", module: "slf4j-jdk14"
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
//	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'io.micrometer:micrometer-registry-datadog:1.1.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.zaxxer:HikariCP'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    //compile 'org.springframework.boot:spring-boot-starter-security'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'com.google.guava:guava:23.6-jre'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    //compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.0.15.RELEASE'
    compile 'com.auth0:java-jwt:3.4.0'
    compile 'javax.validation:validation-api:2.0.1.Final'
    compile 'org.apache.kafka:kafka-clients:1.0.2'
    // graceful shutdown
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
    compile 'org.apache.kafka:kafka-clients:1.0.2'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

compileJava.dependsOn(processResources)

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mysql://localhost:3306/user_management'
    user = 'root'
    password = 'root'
}

bootRun {
    jvmArgs = ["-Dspring.profiles.active=local", "-Dspring.devtools.restart.enabled=true", "-Dlogging.config=classpath:log4j2-local.xml", "-Djava.net.preferIPv4Stack=true"]
    if (project.hasProperty('jvmArgs')) {
        jvmArgs = (project.jvmArgs.split("\\s+" as Closure) as List)
    }
    classpath = sourceSets.main.runtimeClasspath + configurations.developmentOnly
}
